[{"id":"15a050b2.ea5faf","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/testingin","wholemsg":"false"},{"id":"db7d588.f2482a8","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/testing","wholemsg":"false"},{"id":"c62787ee.39d878","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/cloudant-search","wholemsg":"false"},{"id":"64c037b5.9b3fc8","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/audio","wholemsg":"false"},{"id":"ea1d7633.15e288","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/map","wholemsg":"false"},{"id":"2c5c9ec8.d3a362","type":"websocket-listener","z":"5b2319c1.667af8","path":"/ws/cloudant","wholemsg":"false"},{"id":"8a24acdf.607bc8","type":"ibmiot","z":"5b2319c1.667af8","name":"iPhone"},{"id":"3e77d543.c1882a","type":"ibmiot in","z":"5b2319c1.667af8","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"18f464c7cdca","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In TI App (IoT QuickStart) (1247823ebf04) (iPhone 6s) ","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":245,"y":123,"wires":[["664c52d5.99b3ac","94a2c6ca.6b5d38"]]},{"id":"ff6ad0d9.00953","type":"switch","z":"5b2319c1.667af8","name":"temp thresh","property":"payload","rules":[{"t":"lte","v":40,"v2":null},{"t":"gt","v":40,"v2":null}],"checkall":"true","outputs":2,"x":311.5,"y":227,"wires":[["80621eff.7f9de"],["8e1706a.f71e8f8"]]},{"id":"80621eff.7f9de","type":"template","z":"5b2319c1.667af8","name":"safe","template":"Temperature ({{payload}}) within safe limits","x":487.5,"y":210,"wires":[["2454d809.dbab28"]]},{"id":"8e1706a.f71e8f8","type":"template","z":"5b2319c1.667af8","name":"danger","template":"Temperature ({{payload}}) critical","x":486.5,"y":254,"wires":[["2454d809.dbab28"]]},{"id":"c260095b.f0e1c8","type":"ibmiot in","z":"5b2319c1.667af8","authentication":"boundService","apiKey":"8a24acdf.607bc8","inputType":"evt","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT App (IoT Foundation Service)","service":"registered","allDevices":true,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":true,"x":154,"y":75,"wires":[["664c52d5.99b3ac","94a2c6ca.6b5d38"]]},{"id":"18088ff2.16b3f","type":"cloudant out","z":"5b2319c1.667af8","service":"OwnIoTCloud-cloudantNoSQLDB","cloudant":"","name":"Store data in Cloundant \"my_demo_iot_db\"","database":"my_demo_iot_db","payonly":true,"operation":"insert","x":1046,"y":127,"wires":[]},{"id":"814d7fcf.7eb28","type":"debug","z":"5b2319c1.667af8","name":"Get data count","active":false,"console":"false","complete":"payload","x":815,"y":378,"wires":[]},{"id":"e3a2548f.1c5da8","type":"function","z":"5b2319c1.667af8","name":"Get data Count","func":"if (msg.payload.length!== undefined) {\n  var count = msg.payload.length;\n  msg.payload = \"Cloudant contains in total (\" + count + \") docs\";\n} else {\n  msg.payload = \"no valid data available\";\n}\nreturn msg;","outputs":"1","noerr":0,"x":533,"y":333.9998779296875,"wires":[["814d7fcf.7eb28"]]},{"id":"eeedcf49.11123","type":"cloudant in","z":"5b2319c1.667af8","service":"OwnIoTCloud-cloudantNoSQLDB","cloudant":"","name":"Get all docs","database":"my_demo_iot_db","search":"_all_","design":"","index":"","x":334.6666259765625,"y":297.7777099609375,"wires":[["e3a2548f.1c5da8","ac3ba6d6.53c458"]]},{"id":"6f66ef53.90991","type":"inject","z":"5b2319c1.667af8","name":"Start get Data","topic":"","payload":"","payloadType":"string","repeat":"30","crontab":"","once":false,"x":115.6666259765625,"y":422.7777099609375,"wires":[["eeedcf49.11123","eb67aff0.14985"]]},{"id":"1d9c9f23.e26361","type":"cloudant in","z":"5b2319c1.667af8","service":"OwnIoTCloud-cloudantNoSQLDB","cloudant":"","name":"Search docs","database":"my_demo_iot_db","search":"_idx_","design":"_d_search","index":"_inx_all","x":544,"y":421,"wires":[["406d04e6.bf92fc","814d7fcf.7eb28","776a632b.88959c"]]},{"id":"eb67aff0.14985","type":"function","z":"5b2319c1.667af8","name":"Select Value (theTemp:24*)","func":"msg.payload = \"theTemp:20*\"; \nreturn msg;","outputs":1,"noerr":0,"x":339,"y":423,"wires":[["1d9c9f23.e26361"]]},{"id":"664c52d5.99b3ac","type":"function","z":"5b2319c1.667af8","name":"Check Temperature and create JSON Data","func":"// Define different output options\nvar msg1 = { payload:\"undefined\"};\nvar msg2 = { payload:\"undefined\"};\n\n// if msg !0 null begin\nif ( msg !== null)\n{\n  // Check if there is any valid sensor data\n  if ((msg.payload.d.AmbTemp === undefined) &&\n      (msg.payload.d.ambient_temp === undefined) &&\n      (msg.payload.d.temp === undefined)) {\n      msg2.payload = \"No valid Sensor IoT Data Input\";\n  } else {\n    // Create data object\n    data = new Object();\n\n    // *****************\n    // Get Data and time\n    var currentdate = new Date();\n    var the_minutes     = \"00\";\n    var the_seconds     = \"00\";\n\n    if ((currentdate.getMinutes() < 10)){\n        the_minutes = \"0\"+currentdate.getMinutes();\n    } else {\n        the_minutes = currentdate.getMinutes();\n    }\n\n    if ((currentdate.getSeconds() < 10)){\n        the_seconds = \"0\"+currentdate.getSeconds();\n    } else {\n        the_seconds = currentdate.getSeconds();\n    }\n\n    data.date   = currentdate.getDate() + \".\" + (currentdate.getMonth()+1)  + \".\" + currentdate.getFullYear();\n    data.time   = currentdate.getHours() + \":\"  + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n    data.image  = \"undefined\";\n    data.imageLocalURI = \"undefined\";\n\n    // *****************\n    // Get the concrete Sensor data\n    // the input can be different based on your device/app type:\n    // \"Apple, Android, Simulator do have different datastructure in the payload\"\n    //-----------------------------------------------------------------------\n    data.temp = \"20.0000\"; // default\n    if (msg.payload.d.AmbTemp !== undefined) {\n        data.temp     = msg.payload.d.AmbTemp;      // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.ambient_temp !== undefined) {\n        data.temp     = msg.payload.d.ambient_temp;  // Typical Android datastructure\n    }\n\n    if (msg.payload.d.temp !== undefined) {\n        data.temp     = msg.payload.d.temp;          // Typical Simulator datastructure\n    }\n\n    //-------------------------IPTEMP-------------------------------------------------\n    data.iptemp = 20.0000; //default\n    if (msg.payload.d.IRTemp !== undefined) {\n        data.irtemp   = msg.payload.d.IRTemp;        // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.object_temp !== undefined) {\n        data.irtemp   = msg.payload.d.object_temp;   // Typical Android datastructure\n    }\n\n    if (msg.payload.d.objectTemp !== undefined) {\n        data.irtemp   = msg.payload.d.objectTemp;    // Typical Simulator datastructure\n    }\n\n    //-------------------------OPTICAL---------------------------------------------\n    data.optical = 0; // default if not defined by others\n\n    if (msg.payload.d.optical !== undefined) {\n        data.optical  = msg.payload.d.optical;      // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.light !== undefined) {\n        data.optical  = msg.payload.d.light;      // Typical Android datastructure\n    }\n\n    //--------------------------------------------------------------------------\n    data.deviceId = msg.deviceId; // Typical datastructure for all\n\n    // *****************\n    // Add your additional sensor data\n    data.sensorImage = \"img/sensor-detail.png\";\n    data.comment = \"Currently no comment\";\n    if (data.sensorType !== undefined) {\n       data.sensorType = \"Simplelink SensorTag - TI.com\";\n    }\n    data.image    = \"undefined\";\n    data.imageLocalURI = \"undefined\";\n\n    // *****************\n    // Define your Device Type: Which ICON should be dispayed in the App?\n    // ==================================================================\n    // You can get the Device ID from your TI App on your mobile device.\n    //\n    // (iPad:94128ececff1) (iPhone:08b5cbcfa326) (Samsung:c4be84722b07)\n    // http://www.w3schools.com/jsref/jsref_localecompare.asp\n    var ipad = \"94128ececff1\";\n    var iphone = \"1247823ebf04\"; // \"08b5cbcfa326\";\n    var samsung = \"c4be84722b07\";\n    var iosfakeapp = \"123456789\";\n\n    if(data.deviceId.localeCompare(\"94128ececff1\") == 0){\n     data.deviceType=\"iPad\";\n     data.deviceImageURI=\"img/ipad.png\";\n    }\n\n    if(data.deviceId.localeCompare(\"08b5cbcfa326\") == 0){\n     data.deviceType=\"iPhone\";\n     data.deviceImageURI=\"img/iphone.png\";\n    }\n\n    if(data.deviceId.localeCompare(\"123456789\") == 0){\n     data.deviceType=\"iPhone\";\n     data.deviceImageURI=\"img/iphone.png\";\n     data.sensorType = \"Fake App on iOS Device\";\n    }\n\n    if(data.deviceId.localeCompare(\"c4be84722b07\") == 0){\n     data.deviceType=\"Samsung\";\n     data.deviceImageURI=\"img/samsung.png\";\n    } else {\n     data.deviceType=\"Container\";\n     data.deviceImageURI=\"img/container.png\";\n    }\n\n     // *****************\n     // Ehningen 48.65891, 8.940540000000055\n     // http://www.viewphotos.org/germany/coordinates-of-Ehningen-5390.html\n     data.gtfs_latitude  = \"48.6589\";\n     data.gtfs_longitude = \"8.940540000000055\";\n\n     if (data.sensorType !== undefined ){\n       data.sensorType = \"Simplelink SensorTag - TI.com\";\n     }\n\n     // ******************\n     // Check Temperature and create message\n     // ******************\n     if ( data.temp < 25 )\n     {\n       data.message= data.date + \"/\" + data.time + \" (\" + data.temp + \") within safe limits\";\n       data.status =\"SAFE\";\n     } else {\n       data.message= data.date + \"/\" + data.time + \" (\" + data.temp + \") is in critical limits\";\n       data.status =\"CRITICAL\";\n     }\n\n     // *****************\n     // Build data your own datastructure\n     // -> create json root object\n     sensorroot = new Object();\n     sensorroot.sensordatavalue = data;\n\n     // *****************\n     // Set your data as the payload,\n     // which will be used in the next node as input.\n    msg1.payload = sensorroot;\n  } // if check if there is any valid sensor data\n} else {\n    msg2.payload = \"No valid Sensor IoT Data Input\";\n\n}// if else msg != null end\n\nreturn [msg1,msg2];","outputs":"2","noerr":0,"x":678,"y":78,"wires":[["80338a02.6b5a4"],["a2c4059a.5754e8"]]},{"id":"94a2c6ca.6b5d38","type":"function","z":"5b2319c1.667af8","name":"temp","func":"var temp;\n\n   if (msg.payload.d.AmbTemp !== undefined) {\n        temp     = msg.payload.d.AmbTemp;      // Typical Apple datastructure\n    }\n\n    if (msg.payload.d.ambient_temp !== undefined) {\n        temp     = msg.payload.d.ambient_temp;  // Typical Android datastructure\n    }\n\n    if (msg.payload.d.temp !== undefined) {\n        temp     = msg.payload.d.temp;\n    }  \n\nreturn {payload:temp};\n","outputs":1,"noerr":0,"x":152,"y":227,"wires":[["ff6ad0d9.00953"]]},{"id":"ac3ba6d6.53c458","type":"function","z":"5b2319c1.667af8","name":"Extract Data","func":"var count = msg.payload.length;\n\nvar list1 = [];\nvar list2 = [];\nvar msg1 = { payload:\"default output 1\"};\nvar msg2 = { payload:\"default output 2\"};\n\nfor (i=0;i<count;i++) {\n   \n   if (msg.payload[i].sensordatavalue.message !== undefined)\n   {\n       list1.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        message: msg.payload[i].sensordatavalue.message,\n        temp: msg.payload[i].sensordatavalue.temp,\n        irtemp: msg.payload[i].sensordatavalue.irtemp,\n        date: msg.payload[i].sensordatavalue.date,\n        time: msg.payload[i].sensordatavalue.time,\n        optical: msg.payload[i].sensordatavalue.optical,\n        status: msg.payload[i].sensordatavalue.status,\n        deviceId: msg.payload[i].sensordatavalue.deviceId,\n        deviceType: msg.payload[i].sensordatavalue.deviceType,\n        gtfs_latitude: msg.payload[i].sensordatavalue.gtfs_latitude,\n        gtfs_longitude: msg.payload[i].sensordatavalue.gtfs_longitude,\n        image: msg.payload[i].sensordatavalue.image,\n        imageLocalURL: msg.payload[i].sensordatavalue.imageLocalURL,\n        comment : msg.payload[i].sensordatavalue.comment\n      });\n   } else {\n      \n      list2.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev\n      });\n   }\n}\n\nmsg1.payload = {\n                 \"docs\": \n                 list1\n               }\n               \nmsg2.payload = {\n                 \"docs\": \n                 list2\n               }\n               \nreturn [msg1, msg2];","outputs":"2","noerr":0,"x":528,"y":299,"wires":[["921b6529.6de498","6760d3b9.989f2c"],[]]},{"id":"921b6529.6de498","type":"websocket out","z":"5b2319c1.667af8","name":"","server":"2c5c9ec8.d3a362","client":"","x":823,"y":293,"wires":[]},{"id":"6760d3b9.989f2c","type":"websocket out","z":"5b2319c1.667af8","name":"","server":"ea1d7633.15e288","client":"","x":812,"y":342,"wires":[]},{"id":"a50dc3bd.5af24","type":"http in","z":"5b2319c1.667af8","name":"","url":"/cloudant","method":"get","swaggerDoc":"","x":91,"y":553,"wires":[["da51b3fc.25ae5"]]},{"id":"f0702805.0f8fd8","type":"http response","z":"5b2319c1.667af8","name":"http://owniotcloud.mybluemix.net/cloudant","x":701,"y":553,"wires":[]},{"id":"da51b3fc.25ae5","type":"template","z":"5b2319c1.667af8","name":"Show Sensor Cloudant Data on WebSite","field":"payload","format":"html","template":"<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n        body {\n        background-color: linen;\n        }\n\n        h1 {\n          color: maroon;\n          margin-left: 40px;\n        }\n        table, th, td {\n          border: 1px solid black;\n        }\n        #header {\n         background-color:black;\n         color:white;\n         text-align:center;\n         padding:5px;\n        }\n        #footer {\n         background-color:black;\n         color:white;\n         clear:both;\n         text-align:center;\n         padding:5px;\n        }\n    </style>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <title>Extract Cloudant Data</title>\n    <script type=\"text/javascript\">\n\t\tfunction initialize() {\n      // Use browser URL to define socket URL\n\t    var loc = window.location;\n      var messageCount = 0;\n\t    var sensorGeoPage=\"\"\n      if (loc.protocol === \"https:\") {\n            newUri = \"wss:\";\n      } else {\n            newUri = \"ws:\";\n      }\n      newUri += \"//\" + loc.host + \"/ws/cloudant\";\n\n      // Define the related GeoPage URL\n      sensorGeoPage=loc.protocol + \"//\" + loc.host + \"/map\";\n\n\t\t  var output = document.getElementById('output');\n      var sock = new WebSocket(newUri);\n\n\t\t  sock.onopen = function(){\n\t\t    //$('#output').text('Waiting for cloudant data ...');\n\t\t    console.log(\"Connected websocket\");\n\t\t    console.log(\"Sending ping..\");\n\t\t\t  sock.send(\"Ping!\");\n\t\t    console.log(\"Ping sended..\");\n\t\t  };\n\n\t\t  sock.onerror = function(){\n\t\t      document.write(\"<p>Problem Error!!</p>\");\n\t\t      console.log(\"Websocket error\");\n\n\t\t  };\n\n\t\t  sock.onmessage = function(evt){\n        message = \"Getting sensor data: \" + messageCount;\n        messageCount++;\n\t\t    console.log(message);\n\n        // ************************************************\n        // Create HTML-Page BEGIN\n\t\t      document.write(\"<style>body{background-color: linen;}h1{color: maroon;margin-left: 40px;}table, th, td {border: 1px solid black;}</style>\");\n\t\t      document.write(\"<p>Cloudant Sensor Data are available!</p>\");\n\t\t      document.write(\"<p>***************************</p>\");\n\t\t      // document.write(evt.data);\n\t\t      // document.write(\"<p>***************************</p>\");\n\n          // Get sensorData for the socket\n          var sensorData = JSON.parse(evt.data);\n\n          document.write(\"<p>Show Table</p>\");\n\t\t      document.write(\"<a href=\"+sensorGeoPage+\">Go to Senosor Geo Page</a>\");\n\t\t      document.write(\"<p>***************************</p>\");\n\n          // Build table\n\t\t        var myTable= \"<table>\";\n\t\t        myTable+=\"<tr>\";\n\t\t        myTable+=\"<td style='width: auto; color: black; text-align: center;'>Count</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Message</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Temperature</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>DeviceId</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>DeviceType</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>GeoLocation</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Date and Time</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Status</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Image</td>\";\n            myTable+=\"<td style='width: auto; color: black; text-align: center;'>Comment</td>\";\n            myTable+=\"</tr>\";\n            //myTable+=\"<tr><td style='width: 100px;                   '>---------------</td>\";\n            //myTable+=\"<td     style='width: 100px; text-align: right;'>---------------</td>\";\n            //myTable+=\"<td     style='width: 100px; text-align: right;'>---------------</td></tr>\";\n\n          // get datalist\n          var sensors = sensorData.docs;\n\n          // create table rows\n          for(var i = 0; i < sensors.length; i++) {\n  \t\t\t   var sensor = sensors[i];\n  \t\t\t   //output = document.write(\"<p>\"+ sensor + \"</p>\");\n  \t\t\t   myTable+=\"<tr>\";\n  \t\t\t   myTable+=\"<td style='width: auto; color: blue; text-align: left;'>(\" + i + \")</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.message + \"</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.temp + \"</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.deviceId + \"</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'>\" + sensor.deviceType + \"</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'> (\" + sensor.gtfs_latitude + \"):(\" + sensor.gtfs_longitude  + \")</td>\";\n                myTable+=\"<td style='width: auto; color: blue; text-align: left;'> (\" + sensor.date + \"):(\" + sensor.time  + \")</td>\";\n                myTable+=\"<td style='width: auto; color: black; text-align: left;'> <b>\" + sensor.status +\"</b></td>\";\n                myTable+=\"<td style=''><img width='100' height='100' alt='No Image' src='\"+ sensor.image +\"'/></td>\";\n                myTable+=\"<td style='width: auto; color: black; text-align: left;'> <b>\" + sensor.comment +\"</b></td>\"\n                myTable+=\"</tr>\";\n  \t\t\t   }\n           myTable+=\"</table>\";\n\n           // Write table in browser\n           document.write( myTable);\n           document.close();\n  \t\t  };\n\t\t };\n     </script>\n  </head>\n  <body>\n    <!-- *****     CHANGES  ***** -->\n    <!-- Insert YOUR BLUEMIX URL  -->\n    <div id=\"header\">\n      <p>Hello this is the Cloudant Sensor Data Site ... </p> <a href=\"http://YOUR_BLUEMIX_URL/map\">Go to Senosor Data Page</a>\n    </div>\n    <div id=\"output\">Connecting to Socket to get the Cloudant Sensor Data...</div>\n    <script type=\"text/javascript\">\n       initialize();\n    </script>\n    <div id=\"footer\">\n       IoT Bluemix Mobile Sample Page\n    </div>\n  </body>\n</html>","x":344,"y":553,"wires":[["f0702805.0f8fd8"]]},{"id":"c55875cf.3aa788","type":"template","z":"5b2319c1.667af8","name":"Show Geo WebSite with Sensor Cloudant Data ","field":"payload","format":"html","template":"<!--- \n<script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"></script> \n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA3WyzWuy4yav_YeS15_m0-322r-EnEl_c&sensor=true\"></script>\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA3WyzWuy4yav_YeS15_m0-322r-EnEl_c\"></script>\n-->\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <title>Sensor Geo Data</title>\n    <style>\n      html, body, #map-canvas {\n        height: 100%;\n        margin: 0px;\n        padding: 0px\n      }\n      #header {\n        background-color:black;\n        color:white;\n        text-align:center;\n        padding:5px;\n      }\n      #footer {\n        background-color:black;\n        color:white;\n        clear:both;\n        text-align:center;\n        padding:5px; \n      }\n    </style>\n    <script src=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"></script>\n    <script>\n\t\tfunction initialize() {\n\t\t  \n\t\t  var loc = window.location;\n          if (loc.protocol === \"https:\") {\n            newUri = \"wss:\";\n          } else {\n            newUri = \"ws:\";\n          }\n          newUri += \"//\" + loc.host + \"/ws/map\";\n\t\t  \n\t\t  var sock = new WebSocket(newUri);\n\t\t  var stuttgart = new google.maps.LatLng(48.76666672,9.1833333);\n\t\t  var mapOptions = {\n\t\t     zoom: 10,\n\t\t     center: stuttgart\n\t\t    };\n\t\t  var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);\n\t\t  \n\t\t  sock.onopen = function(){ \n\t\t    console.log(\"Connected websocket\");\n\t\t    console.log(\"Sending ping..\");\n\t\t  \tsock.send(\"Ping!\");\n\t\t    console.log(\"Ping sended..\");\n\t\t  };\n\t\t  \n\t\t  sock.onerror = function(){ \n\t\t      console.log(\"Websocket error\"); \n\t\t      \n\t\t  };\n\t\t  \n\t\t  sock.onmessage = function(evt){\n\t\t    console.log(\"getting message\");\n\t\t    \n\t\t    var sensorData = JSON.parse(evt.data);\n\t\t    var sensors = sensorData.docs;\n\t\t    var logmessage=\"\";\n\t\t    var geotitle=\"\";\n\t\t    \n\t\t    console.log(\"in 'onmessage'\");\n\t\t    console.log(\"in 'onmessage' setting sensor data size\");\n\t\t    \n\t\t    // Set the sensor count on HTML\n\t\t    document.getElementById(\"count\").innerHTML =sensors.length;;\n\t\t    \n\t\t\tfor(var i = 0; i < sensors.length; i++) {\n\t\t\t  var sensor   = sensors[i];\n\t\t\t  // var j       = i * i;\n\t\t\t  // var move     = \"6\"+ j;\n\t\t\t  // var move2     = \"5\"+ j;\n\t\t\t  // var latitude = sensor.gtfs_latitude.replace(\"65\", move);\n\t\t\t  // var longitude = sensor.gtfs_longitude.replace(\"94\", move2);\n\t\t\t  \n\t\t\t  var longitude = sensor.gtfs_longitude;\n\t\t\t  var latitude = sensor.gtfs_latitude;\n\t\t\t  \n\t\t\t  logmessage=\"Count [\"+i+\"] Sensor ID: [\"+sensor.deviceId+\"] Status: [\"+sensor.status+\"]\";\n\t\t\t  console.log(logmessage);\n\t\t\t  geotitle=\"Device: (\" + sensor.deviceId + \") Status: (\" + sensor.status +\") Date: (\"+ sensor.date + \") Time: (\" + sensor.time +\")\";\n\t\t\t  logmessage=\"Geo Title: \" + geotitle;\n\t\t\t  console.log(logmessage);\n\t\t\t  logmessage=\"La {\" + latitude + \"} Lo {\" + longitude + \"}\";\n\t\t\t  console.log(logmessage);\n\t\t\t  //geotitle=\"Title\"+i;\n\t\t\t  \n\t\t\t  var marker = new google.maps.Marker({\n\t\t\t    position: new google.maps.LatLng(latitude,longitude),\n\t\t\t    map: map,\n\t\t\t    animation: google.maps.Animation.DROP,\n\t\t\t    title: geotitle\n\t\t\t  });\n\t\t\t}\n\t\t\t\n\t\t\tvar marker = new google.maps.Marker({\n\t\t\t    position: new google.maps.LatLng(48.76666672,9.1833333),\n\t\t\t    map: map,\n\t\t\t    animation: google.maps.Animation.DROP,\n\t\t\t    title: \"Home Location - Stuttgart\"\n\t\t\n\t\t\t });\n\t\t\t \n\t\t\t var infowindow = new google.maps.InfoWindow({\n                    content: '<p>Marker Location:' + marker.getPosition() + '</p>'\n             });\n\t\t  };\n\t\t};\n\t\tgoogle.maps.event.addDomListener(window, 'load', initialize);\n    </script>\n  </head>\n  <body>\n    <!-- *****     CHANGES  ***** -->\n    <!-- Insert YOUR BLUEMIX URL  -->\n    <div id=\"header\">\n      <p>Hello this is the Cloudant Sensor Geo Data Site ... </p> <a href=\"http://owniotcloud.mybluemix.net/cloudant\">Go to Senosor Data Page</a>\n      <p id=\"count\"></p>\n    </div>\n    <div id=\"output\">Connecting to Socket to get the Cloudant Sensor Geo Data...</div>\n    <div id=\"map-canvas\"></div>\n    <div id=\"footer\">\n       IoT Bluemix Mobile Sample Page\n    </div>\n  </body>\n</html>","x":354,"y":512,"wires":[["4bccb863.b43348"]]},{"id":"7d76e859.828918","type":"http in","z":"5b2319c1.667af8","name":"","url":"/map","method":"get","swaggerDoc":"","x":76,"y":512,"wires":[["c55875cf.3aa788"]]},{"id":"4bccb863.b43348","type":"http response","z":"5b2319c1.667af8","name":"http://owniotcloud.mybluemix.net/map","x":712,"y":512,"wires":[]},{"id":"dc7e31b.f2381d","type":"http in","z":"5b2319c1.667af8","name":"","url":"/audio","method":"get","swaggerDoc":"","x":81,"y":477,"wires":[["591414d3.a6ebec"]]},{"id":"96614680.699eb8","type":"http response","z":"5b2319c1.667af8","name":"http://owniotcloud.mybluemix.net/audio","x":707.5455322265625,"y":476.272705078125,"wires":[]},{"id":"591414d3.a6ebec","type":"template","z":"5b2319c1.667af8","name":"Get audio and play the audio in Browser","field":"","template":"<!DOCTYPE html>\n<html>\n<head>\n  <title>IBM Watson - Text To Speech</title>\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n  \n  <script type=\"text/javascript\">\n    var socketaddy = \"ws://\" + window.location.host + \"/ws/audio\";\n\n    $(document).ready(function(){\n      var output = document.getElementById('output')\n      $('#output').on('playing', function () {\n          $('#text').text('Playing audio.')\n          \n      });\n      $('#output').on('ended', function () {\n          $('#text').text('Waiting for audio...')\n          \n      });\n      sock = new WebSocket(socketaddy);\n      sock.onopen = function(){\n          $('#text').text('Waiting for audio...');\n          console.log(\"Connected websocket\");\n      };\n      sock.onerror = function(){ \n          console.log(\"Websocket error\"); \n      };\n      sock.onclose = function () {\n          $('#text').text('Not connected. Refresh the page?')\n      }\n      sock.onmessage = function(evt){\n        console.log(\"Websocket message\", evt); \n        output.src = window.URL.createObjectURL(evt.data);\n        output.play();\n      };\n    });\n  </script>\n  \n</head>\n<body style=\"font-size: 56px; font-family: helvetica; text-align: center; margin-top: 100px;\">\n  <div id=\"text\">Connecting...</div>\n  <audio id=\"output\"></audio>\n</body>\n</html>","x":338,"y":477,"wires":[["96614680.699eb8"]]},{"id":"9a340511.65cbf8","type":"watson-text-to-speech","z":"5b2319c1.667af8","name":"MyText2Speech","lang":"english","voice":"en-US_LisaVoice","x":870,"y":223,"wires":[["9ba696ff.645968"]]},{"id":"9ba696ff.645968","type":"function","z":"5b2319c1.667af8","name":"From Speech to Payload","func":"// \nmsg.payload = msg.speech;\n\nreturn msg;","outputs":1,"noerr":0,"x":1081.8182373046875,"y":223.54541015625,"wires":[["151226fe.eaedd9"]]},{"id":"151226fe.eaedd9","type":"websocket out","z":"5b2319c1.667af8","name":"The WebSocket /ws/audio","server":"64c037b5.9b3fc8","client":"","x":1087,"y":272.99993896484375,"wires":[]},{"id":"2454d809.dbab28","type":"delay","z":"5b2319c1.667af8","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":710.5,"y":222.99993896484375,"wires":[["9a340511.65cbf8"]]},{"id":"eb68259.f1497d8","type":"inject","z":"5b2319c1.667af8","name":"Start messages","topic":"","payload":"The temperature is in safe limits! This is a text to speech check!","payloadType":"string","repeat":"22","crontab":"","once":true,"x":522,"y":170,"wires":[["2454d809.dbab28"]]},{"id":"a2c4059a.5754e8","type":"template","z":"5b2319c1.667af8","name":"No valid sensor data!","field":"payload","format":"handlebars","template":"Message from IoT Sensor Data validation: {{payload}} !","x":677,"y":127,"wires":[["2454d809.dbab28"]]},{"id":"80338a02.6b5a4","type":"switch","z":"5b2319c1.667af8","name":"Route valid data in payload to cloudant","property":"payload","rules":[{"t":"neq","v":"undefined"},{"t":"eq","v":"undefined"}],"checkall":"true","outputs":2,"x":1035,"y":75,"wires":[["18088ff2.16b3f"],[]]},{"id":"677d94bf.98826c","type":"ibmiot in","z":"5b2319c1.667af8","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"18f464c7cdca","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In Simulator (IoT QuickStart) ","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":166.5,"y":165,"wires":[["664c52d5.99b3ac","94a2c6ca.6b5d38"]]},{"id":"406d04e6.bf92fc","type":"function","z":"5b2319c1.667af8","name":"Extract Search Data","func":"var msg1 = { payload:\"undefined\"};\nvar msg2 = { payload:\"undefined\"};\n\n// Check valid payload\nif ((msg.payload.length !== undefined)&&\n    (msg.payload[0].sensordatavalue.message!==undefined))\n{ var count = msg.payload.length;\n  var list1 = [];\n\n  // Create search result list\n  for (i=0;i<count;i++) {\n       list1.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        message: msg.payload[i].sensordatavalue.message,\n        temp: msg.payload[i].sensordatavalue.temp,\n        irtemp: msg.payload[i].sensordatavalue.irtemp,\n        date: msg.payload[i].sensordatavalue.date,\n        time: msg.payload[i].sensordatavalue.time,\n        optical: msg.payload[i].sensordatavalue.optical,\n        status: msg.payload[i].sensordatavalue.status,\n        deviceId: msg.payload[i].sensordatavalue.deviceId,\n        deviceType: msg.payload[i].sensordatavalue.deviceType,\n        gtfs_latitude: msg.payload[i].sensordatavalue.gtfs_latitude,\n        gtfs_longitude: msg.payload[i].sensordatavalue.gtfs_longitude,\n        image: msg.payload[i].sensordatavalue.image,\n        imageLocalURL: msg.payload[i].sensordatavalue.imageLocalURL,\n        comment : msg.payload[i].sensordatavalue.comment\n      });\n   }\n   msg1.payload = {\n                    \"docs\":\n                    list1\n                  }\n}\n\nreturn [msg1, msg2];","outputs":"2","noerr":0,"x":748,"y":422,"wires":[["4231700f.bdce9"],[]]},{"id":"1014615.fefeb9f","type":"websocket out","z":"5b2319c1.667af8","name":"The WebSocket /ws/cloudant-search","server":"c62787ee.39d878","client":"","x":1073,"y":466,"wires":[]},{"id":"b7f8f813.480708","type":"template","z":"5b2319c1.667af8","name":"Data search with \"html\" and \"javascript\"","field":"payload","format":"handlebars","template":"<!DOCTYPE HTML>\n<html>\n\n<head>\n        <title>Simple Display</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquerymobile/1.4.5/jquery.mobile.min.js\"></script>\n</head>\n<script type=\"text/javascript\">\n        // Reuse and customization of the BLOG http://tech.scargill.net/a-node-red-websockets-web-page/\n        // Using http://stackoverflow.com/questions/5881033/how-to-generate-ul-li-list-from-string-array-using-jquery\n        // Init\n        var socketNameOut = \"testing\";\n        var socketNameIn  = \"testingin\";\n        var loc = window.location;\n        var newUriIn = \"\";\n        var newUri = \"\";\n\n        if (loc.protocol === \"https:\") {\n            newUri = \"wss:\";\n            newUriIn = \"wss:\";\n        } else {\n            newUri = \"ws:\";\n            newUriIn = \"ws:\";\n        }\n        newUri += \"//\" + loc.host + \"/ws/\" + socketNameOut;\n        newUriIn += \"//\" + loc.host + \"/ws/\" + socketNameIn;\n        var topics = {};\n\n        // Connect to socket and get message\n        function wsConnectC() {\n            console.log(\"connect to: \",newUri);\n            var socket_get = new WebSocket(newUri);\n            console.log(\"socket_get\", socket_get);\n\n            socket_get.onopen = function() {\n                $(\"#status\").html(\"connected\");\n                console.log(\"socket_get-connected\");\n            }\n\n            socket_get.onmessage = function(msg) {\n                var line = \"\";\n                console.log(msg.data);\n\n                // Clear List\n                $('.DivSai').empty();\n                // Get sensorData for the socket\n                var sensorData = JSON.parse(msg.data);\n                var sensors = sensorData.docs;\n\n                // Build list\n                var ObjUl = $('<ul></ul>');\n                for(var i = 0; i < sensors.length; i++) {\n        \t\t\t    var sensor = sensors[i];\n                  var Objli = $('<li></li>');\n                  var Obja = $('<a></a>');\n\n                  ObjUl.addClass(\"ui-menu-item\");\n                  ObjUl.attr(\"role\", \"menuitem\");\n\n                  Obja.addClass(\"ui-all\");\n                  Obja.attr(\"tabindex\", \"-1\");\n\n                  Obja.text(sensor.message);\n                  Objli.append(Obja);\n\n                  ObjUl.append(Objli);\n                }\n                $('.DivSai').append(ObjUl);\n            }\n\n            socket_get.onerror = function(){\n                console.log(\"socket_get-error\");\n            };\n\n            socket_get.onclose = function() {\n                $(\"#status\").html(\"not connected\");\n                console.log(\"socket_get not connected\");\n            }\n        }\n\n        // Send message to socket\n        function sendMessage(){\n           // send message back to page in simple JSON format\n           // example {“part1”:”Hello”,”part2”:”50”}\n           //var toPage='{\"payload\":\"'+$(\"#txtMsg_1\").val()+'\"}';\n           //var searchExp = '\"{ \"cloudant\" : { \"searchExp\" : \"'+$(\"#txtMsg_1\").val()+'\" }}\"';\n           var searchExp = $(\"#txtMsg_1\").val();\n           var socket_send = new WebSocket(newUriIn);\n           console.log(\"newUriIn\", newUriIn);\n           console.log(\"socket_send\", socket_send);\n\n           socket_send.onopen = function() {\n               $(\"#status\").html(\"connected\");\n               console.log(\"socket_send-connected\");\n               // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#Ready_state_constants\n               if (socket_send.readyState === 1) {\n                  socket_send.send(searchExp);\n                  console.log(\"socket_send.send\", searchExp);\n               }\n           }\n\n           socket_send.onerror = function(){\n               console.log(\"socket_send-error\");\n\n           };\n\n           socket_send.onclose = function() {\n               $(\"#status\").html(\"not connected\");\n               console.log(\"Socket_send not connected\");\n           }\n        } // end sendMessage\n</script>\n\n<body onload=\"wsConnectC();\" onunload=\"socket_get.disconnect;\">\n<div data-role=\"page\" id=\"one\">\n        <div data-role=\"header\">\n            <h1>Websockets Test Page</h1>\n        </div>\n        <div role=\"main\" class=\"ui-content\">\n            <h1>Temperature Display</h1>\n            <div id=\"status\">status unknown</div>\n            <input id=\"txtMsg_1\" />\n            <div id=\"part1\">!Empty!</div>\n            <hr/>\n            <div id=\"part2\">0</div>\n            <hr/>\n            <label for=\"slider_1\">Input slider:</label>\n            <input type=\"range\" id=\"slider_1\" value=\"60\" min=\"0\" max=\"100\"  />\n            <input type=\"button\" value=\"Update\" onClick=\"sendMessage()\" />\n            <input type=\"button\" value=\"Load\" onClick=\"wsConnectC()\" />\n            <div class=\"DivSai\" ></div>\n        </div>\n    </div>\n    </body>\n</html>\n","x":390,"y":696,"wires":[["f4fe15ce.0b01e8"]]},{"id":"814cd1c4.7eb33","type":"websocket out","z":"5b2319c1.667af8","name":"socket for output on html page - testing out","server":"db7d588.f2482a8","client":"","x":1073,"y":594,"wires":[]},{"id":"9212e395.6ded2","type":"websocket in","z":"5b2319c1.667af8","name":"socket for input - testing in","server":"15a050b2.ea5faf","client":"","x":132,"y":645,"wires":[["1de7e75b.e21819"]]},{"id":"36e0c050.c91f4","type":"http in","z":"5b2319c1.667af8","name":"get testing out","url":"/testing","method":"get","swaggerDoc":"","x":96,"y":696,"wires":[["b7f8f813.480708"]]},{"id":"f4fe15ce.0b01e8","type":"http response","z":"5b2319c1.667af8","name":"http://owniotcloud.mybluemix.net/testing","x":819,"y":695,"wires":[]},{"id":"4231700f.bdce9","type":"switch","z":"5b2319c1.667af8","name":"Route valid data in payload to search output","property":"payload","rules":[{"t":"neq","v":"undefined"},{"t":"eq","v":"undefined"}],"checkall":"true","outputs":2,"x":1066,"y":418,"wires":[["1014615.fefeb9f","468fb883.b97048"],[]]},{"id":"776a632b.88959c","type":"function","z":"5b2319c1.667af8","name":"Get search Count","func":"if (msg.payload.length!== undefined) {\n  var count = msg.payload.length;\n  msg.payload = \"Cloudant search contains in total (\" + count + \") docs\";\n} else {\n  msg.payload = \"no valid data available\";\n}\nreturn msg;","outputs":"1","noerr":0,"x":540,"y":371,"wires":[["814d7fcf.7eb28"]]},{"id":"468fb883.b97048","type":"debug","z":"5b2319c1.667af8","name":"check valid data","active":false,"console":"false","complete":"payload","x":1133,"y":370,"wires":[]},{"id":"1de7e75b.e21819","type":"cloudant in","z":"5b2319c1.667af8","service":"OwnIoTCloud-cloudantNoSQLDB","cloudant":"","name":"Search docs","database":"my_demo_iot_db","search":"_idx_","design":"_d_search","index":"_inx_all","x":340,"y":646,"wires":[["62b050e9.9d4fb"]]},{"id":"62b050e9.9d4fb","type":"function","z":"5b2319c1.667af8","name":"Extract Search Data","func":"var msg1 = { payload:\"undefined\"};\nvar msg2 = { payload:\"undefined\"};\n\n// Check valid payload\nif ((msg.payload.length !== undefined)&&\n    (msg.payload[0].sensordatavalue.message!==undefined))\n{ var count = msg.payload.length;\n  var list1 = [];\n\n  // Create search result list\n  for (i=0;i<count;i++) {\n       list1.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        message: msg.payload[i].sensordatavalue.message,\n        temp: msg.payload[i].sensordatavalue.temp,\n        irtemp: msg.payload[i].sensordatavalue.irtemp,\n        date: msg.payload[i].sensordatavalue.date,\n        time: msg.payload[i].sensordatavalue.time,\n        optical: msg.payload[i].sensordatavalue.optical,\n        status: msg.payload[i].sensordatavalue.status,\n        deviceId: msg.payload[i].sensordatavalue.deviceId,\n        deviceType: msg.payload[i].sensordatavalue.deviceType,\n        gtfs_latitude: msg.payload[i].sensordatavalue.gtfs_latitude,\n        gtfs_longitude: msg.payload[i].sensordatavalue.gtfs_longitude,\n        image: msg.payload[i].sensordatavalue.image,\n        imageLocalURL: msg.payload[i].sensordatavalue.imageLocalURL,\n        comment : msg.payload[i].sensordatavalue.comment\n      });\n   }\n   msg1.payload = {\n                    \"docs\":\n                    list1\n                  }\n}\n\nreturn [msg1, msg2];","outputs":"2","noerr":0,"x":533,"y":647,"wires":[["6175c246.9e8a3c"],[]]},{"id":"6175c246.9e8a3c","type":"switch","z":"5b2319c1.667af8","name":"Route valid data in payload to search output","property":"payload","rules":[{"t":"neq","v":"undefined"},{"t":"eq","v":"undefined"}],"checkall":"true","outputs":2,"x":817,"y":641,"wires":[["814cd1c4.7eb33"],[]]}]
